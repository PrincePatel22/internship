Table Used: 
===========
student (recid, rollno, fname, sname, surname, admitdate, birthdate, standard, sex)

CREATE TABLE student2_Prince(recid INT,rollno INT,fname VARCHAR(100),sname VARCHAR(100),surname VARCHAR(100),admitdate DATE,birthdate DATE,standard INT,sex VARCHAR(50));

INSERT INTO student2_Prince VALUES(1,101,"Parth","Ravibhai","Patel","2006-05-03","2001-02-02",11,"Male");
INSERT INTO student2_Prince VALUES(2,102,"Yasha","Rajubhai","Thakur","2006-07-15","2002-03-22",10,"Female");
INSERT INTO student2_Prince VALUES(3,103,"Kamlesh","Rajubhai","Patel","2006-06-23","2003-02-24",10,"Male");
INSERT INTO student2_Prince VALUES(4,104,"Sahil","Ravibhai","Patel","2007-05-03","2001-02-02",11,"Male");

Write a query for following requirement:
=======================================

Q-1	Display Full Name of all the male students whose first name ends with "h" and are admitted between 1st January 2006 to 1st August 2006.

	Eg:

	|----------------------|
	|FULL NAME	       |	
	|----------------------|
	|Kamlesh Rajubhai Patel|
	------------------------

	Here "Kamlesh" is the value of 'fname' column, "Rajubhai" of 'sname' and "Patel" of 'surname' column. And first character is in capital for fname, sname, surname and each column value is separated by single space.

SELECT CONCAT(fname," ",sname," ",surname) AS "FULL NAME" FROM student2_Prince WHERE fname LIKE "%h" AND admitdate BETWEEN "2006-01-01" AND "2006-08-01" AND sex="Male";


Tables Used:
===========

1) product (recid, mfrid, description, price, qtyonhand)
2) orders (recid, customerid, orderdate, salesrepsid, productid, qty, amount)
3) customer (recid, company, salesrepsid, creditlimit)
4) salesreps (recid, name, officeid, designation, hiredate, manager, quota, sales, age)
5) office (recid, city, region, manager, targetsales, actualsales)

CREATE TABLE product2_Prince(recid INT PRIMARY KEY,mfrid INT,description VARCHAR(255),price FLOAT,qtyonhand INT);
CREATE TABLE orders_Prince(recid INT,customerid INT,orderdate DATE,salesrepsid INT,productid INT,qty INT,amount FLOAT);
CREATE TABLE customer_Prince(recid INT,company VARCHAR(255),salesrepsid INT,creditlimit FLOAT);
CREATE TABLE salesreps_Prince(recid INT,name VARCHAR(255),officeid INT,designation VARCHAR(100),hiredate DATE,manager VARCHAR(100),quota VARCHAR(100),sales FLOAT,age INT);
CREATE TABLE office_Prince(recid INT,city VARCHAR(100),region VARCHAR(100),manager VARCHAR(100),targetsales INT,actualsales INT);

insert into product2_Prince values(001,011,'good quality product',500,50),(002,022,'good quality product',100,10);
insert into office_Prince values(001,'Ahmedabad','east','Preet Patel',70,21),(002,'Surat','east','Mira Kapoor',95,45);
insert into salesreps_Prince values(001,'Mayur',001,'Programmer','2022-02-01','Preet Patel','120',70,21),(002,'Shubham',002,'Manager','2020-07-05','Mira Kapoor','150',80,42);
insert into customer_Prince values(001,'lenovo',001,70000),(002,'HP',002,45000);
insert into orders_Prince values(001,001,'2022-02-13',001,001,10,500),(002,002,'2020-05-26',002,002,20,2500);Â 

Write queries for below requirements:
=====================================

Q-1	Find Name of all those sales representatives whose offices are in cities ending with 
	"pur" and who have atleast 2 customers. The sales representative must be hired before 
	1st January 2006 and his/her minimum age should be 21 yrs.

	Display fields : Sales Rep. Name, Office City, No. of Customers, Hired on
=>  SELECT sa.name,of.city,COUNT(cu.recid),sa.hiredate FROM salesreps_Prince sa inner join office_Prince of on sa.recid=of.recid inner join customer_Prince cu on sa.recid=cu.recid WHERE city LIKE "%pur" and age>=21 group by city having count(cu.recid)>=2; 


Q-2	Find following information for each customer:

	Display fields : Company Name, Sales Rep. Name, Sales Rep. Office City, Company Credit
=> SELECT cu.company as 'Company Name',sa.name as  'Sales Rep. Name',of.city as 'Sales Rep. Office City',cu.creditlimit as 'Company Credit' from customer_Prince cu INNER JOIN salesreps_Prince sa on cu.recid=sa.recid inner join office_Prince of on cu.recid=of.recid;


Q-3	Find following information for each office:

	Office city, Total Sales Rep., Total sale by all sales Rep.,
	Target Sales, Actual Sales, Difference of Target and Actual Sales.

	Display fields : Office City, No. of Sales Rep., Total Sale, Target Sales, Actual  Sales, Difference.
=> SELECT of.city as 'Office City',count(sa.recid) as 'No. of Sales Rep.',sum(sa.sales) as 'Total Sale',of.targetsales as 'Target Sales',of.actualsales as 'Actual Sales',(of.targetsales-of.actualsales) as Difference from office_Prince of inner join salesreps_Prince sa on of.recid=sa.recid group by city;


Q-4	Find following information for each product:

	Product description, Price, Quantity on hand, Total no. of 
	orders for each product, Total quantity ordered, Total amount of the orders for each product.

	Display fields : Description, Price, Quantity, Orders, Quantity, Total Amount
=> SELECT pr.description AS Description,pr.price AS Price,pr.qtyonhand AS 'Quantity on Hand',ord.recid AS Orders,ord.qty AS Quantity,(ord.qty*ord.amount) AS 'Total Amount' from product2_Prince pr INNER JOIN orders_Prince ord on pr.recid=ord.recid;


Q-5	Find order details for all the customers. There will be one row per customer displaying 	
	total quantity ordered by them and the amount spent by each customer.
	
	Display fields : Company Name, Total Quantity Ordered, Total Amount
=>  SELECT cu.company as 'Company Name',ord.qty as 'Total Quantity Ordered',(ord.qty*ord.amount) as 'Total Amount' from customer_Prince cu inner join orders_Prince ord on cu.recid=ord.recid group by company;


Q-6	Display all the sales representatives hired within the past five years from today along with thier Quota and 
	Sales information.
	
	Display fields : Sales Rep. Name, Hired on, Quota, Sales
=> SELECT sa.name as 'Sales Rep. Name',sa.hiredate as 'Hired on',sa.quota as Quota,sa.sales as Sales from salesreps_Prince sa where year(hiredate) between YEAR(CURDATE())-5 and YEAR(CURDATE()) group by name;


Q-7	Find total number of customers for all the products ordered. There will be one row per 	
	order displaying product description, and total number of customers who have ordered 	that product.

	Display fields : Product Description, Total No. of Customers who Ordered this Product.
=> SELECT pr.description AS 'Product Description',ord.productid AS 'Total No. of Customers who Ordered this Product' from product2_Prince pr INNER JOIN orders_Prince ord on pr.recid=ord.recid GROUP by ord.recid;